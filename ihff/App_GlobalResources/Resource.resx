<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddressLbl" xml:space="preserve">
    <value>Address:</value>
  </data>
  <data name="AddWishlistBtn" xml:space="preserve">
    <value>Add to Wishlist</value>
  </data>
  <data name="AgeClassificationLbl" xml:space="preserve">
    <value>Kijkwijzer®</value>
  </data>
  <data name="AuthorLbl" xml:space="preserve">
    <value>Author:</value>
  </data>
  <data name="CastLbl" xml:space="preserve">
    <value>Cast:</value>
  </data>
  <data name="DescriptionLbl" xml:space="preserve">
    <value>Description:</value>
  </data>
  <data name="DirectorLbl" xml:space="preserve">
    <value>Director:</value>
  </data>
  <data name="Friday" xml:space="preserve">
    <value>Friday</value>
  </data>
  <data name="HomeContent" xml:space="preserve">
    <value>&lt;p&gt;Welcome to Haarlem and welcome to the international Haarlem film festival. This year’s theme is The Science of Fiction / Celluloid Realism. &lt;/p&gt;
&lt;p&gt;
Ever since Georges Méliès, film is pre- eminently the medium where experiments and vision go hand in hand. Countless directors envisioned with their films a future in which mechanisation and technology are omnipresent. And always the questions are the same: “In what way do man and machine influence each other and how does that affect our society”. &lt;/p&gt;
&lt;p&gt;
Of all the images trusted to the celluloid only a few have come true. Reality is always more horrific than fantasy and now that technology is becoming increasingly important in our society new social and moral questions have to be answered. In 23 films and 10 ‘Specials’ we try to paint a picture of the salvation and disaster in our time and beyond. &lt;/p&gt;
&lt;p&gt;
We hope you will enjoy it.&lt;/p&gt;</value>
  </data>
  <data name="HomeTitle" xml:space="preserve">
    <value>Introduction</value>
  </data>
  <data name="ImdbPageLbl" xml:space="preserve">
    <value>IMDB Page:</value>
  </data>
  <data name="ImdbRatingLbl" xml:space="preserve">
    <value>IMDB Rating:</value>
  </data>
  <data name="LocationLbl" xml:space="preserve">
    <value>Location:</value>
  </data>
  <data name="LocationTimeLbl" xml:space="preserve">
    <value>Location and Time:</value>
  </data>
  <data name="OrderFFBtn" xml:space="preserve">
    <value>Order Food &amp; Film Ticket</value>
  </data>
  <data name="Overview" xml:space="preserve">
    <value>Overview</value>
  </data>
  <data name="PhoneLbl" xml:space="preserve">
    <value>Phonenumber:</value>
  </data>
  <data name="PriceLbl" xml:space="preserve">
    <value>Price:</value>
  </data>
  <data name="Saturday" xml:space="preserve">
    <value>Saturday</value>
  </data>
  <data name="Sunday" xml:space="preserve">
    <value>Sunday</value>
  </data>
  <data name="Thursday" xml:space="preserve">
    <value>Thursday</value>
  </data>
  <data name="TimeDateLbl" xml:space="preserve">
    <value>Time and Date:</value>
  </data>
  <data name="TimeLbl" xml:space="preserve">
    <value>Time:</value>
  </data>
  <data name="TitleLbl" xml:space="preserve">
    <value>Title:</value>
  </data>
  <data name="Wednesday" xml:space="preserve">
    <value>Wednesday</value>
  </data>
  <data name="YearLbl" xml:space="preserve">
    <value>Year:</value>
  </data>
  <data name="ZipCodeLbl" xml:space="preserve">
    <value>ZipCode:</value>
  </data>
  <data name="CodeLbl" xml:space="preserve">
    <value>Code:</value>
  </data>
  <data name="GetWishlistLbl" xml:space="preserve">
    <value>Get Wishlist</value>
  </data>
  <data name="PlaceOrderLbl" xml:space="preserve">
    <value>Place Order</value>
  </data>
  <data name="TotalPriceLbl" xml:space="preserve">
    <value>Total Price:</value>
  </data>
  <data name="WishlistCode" xml:space="preserve">
    <value>If you've got an whislist code, you can enter it below.</value>
  </data>
  <data name="WishlistTxt1" xml:space="preserve">
    <value>This is your wishlist, it is empty at the moment. You can add</value>
  </data>
  <data name="WishlistTxt2" xml:space="preserve">
    <value>and</value>
  </data>
  <data name="WishlistTxt3" xml:space="preserve">
    <value>to your wishlist by clicking the add to wishlist button.</value>
  </data>
  <data name="ContactLbl" xml:space="preserve">
    <value>Contact Us</value>
  </data>
  <data name="FoodFilmContent" xml:space="preserve">
    <value>&lt;p&gt;Haarlem has an exquisite culinary culture, that is why we selected the best restaurants too take part in this years festival. To promote these restaurants we bring you the Food &amp; Film Ticket. Dining as the appetiser and a beautiful movie as a dessert.&lt;/p&gt;
&lt;p&gt;A Food &amp; Film ticket will save you some money and introduces you to the finest restaurants in the area. To order a Food &amp; Film Ticket, navagate to the movie you would like to see and open its details page. From this page you will have the option to order a Food &amp; Film Ticket.&lt;/p&gt;</value>
  </data>
  <data name="FoodFilmTitle" xml:space="preserve">
    <value>Food &amp; Film Ticket</value>
  </data>
  <data name="FoodFilmTxt1" xml:space="preserve">
    <value>To choice your movie go to the</value>
  </data>
  <data name="FoodFilmTxt2" xml:space="preserve">
    <value>page.</value>
  </data>
  <data name="AddToFFLbl" xml:space="preserve">
    <value>Add to Food &amp; Film Ticket</value>
  </data>
  <data name="ConfirmedTxt" xml:space="preserve">
    <value>Your order has been confirmed.</value>
  </data>
  <data name="EmailCodeTxt" xml:space="preserve">
    <value>You can choose to send your reservation per email</value>
  </data>
  <data name="PaymentTitle" xml:space="preserve">
    <value>Payment Succeeded</value>
  </data>
  <data name="ResAmountLbl" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="ResBtn" xml:space="preserve">
    <value>Make Reservation</value>
  </data>
  <data name="ResCodeTxt1" xml:space="preserve">
    <value>Take note of this code</value>
  </data>
  <data name="ResCodeTxt2" xml:space="preserve">
    <value>as this will be the way to retrieve your tickets.</value>
  </data>
  <data name="ResCodeTxt3" xml:space="preserve">
    <value>Or print it directly from our page.</value>
  </data>
  <data name="ResCustomerNameLbl" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="ResCustomerPhoneLbl" xml:space="preserve">
    <value>Phonenumber:</value>
  </data>
  <data name="ResDateTimeLbl" xml:space="preserve">
    <value>Date - Time</value>
  </data>
  <data name="ReservationsTitle" xml:space="preserve">
    <value>Reservations</value>
  </data>
  <data name="ResLocationLbl" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="ResNameLbl" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="ResPaymentOptionsLbl" xml:space="preserve">
    <value>Choose a method of payment</value>
  </data>
  <data name="ResTotalPriveLbl" xml:space="preserve">
    <value>Total Price</value>
  </data>
  <data name="SaveOrderWishlistLbl" xml:space="preserve">
    <value>Do you want to save this item in your wishlist?</value>
  </data>
</root>